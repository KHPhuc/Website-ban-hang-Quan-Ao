import { message } from "antd";
import { toast } from "react-toastify";

const loadingToast = (message: any) => {
  const id = toast.loading(message, { containerId: "CT" });
  return id;
};

const updateToast = (id: any, message: any, type: any) => {
  setTimeout(() => {
    toast.update(id, {
      render: message,
      type: type,
      isLoading: false,
      autoClose: 2000,
      closeOnClick: true,
      draggable: true,
      pauseOnFocusLoss: false,
      pauseOnHover: false,
      theme: "light",
      containerId: "CT",
    });
  }, 100);
};

const updateToastNoStop = (id: any, message: any, type: any) => {
  setTimeout(() => {
    toast.update(id, {
      render: message,
      type: type,
      isLoading: true,
      autoClose: 2000,
      closeOnClick: true,
      draggable: true,
      pauseOnFocusLoss: false,
      pauseOnHover: false,
      theme: "light",
      containerId: "CT",
    });
  }, 100);
};

const loginSuccess = (name: any) => {
  return {
    message: (
      <div className="text-slate-500">
        Xin ch√†o <p className="font-semibold inline">{name ? name : ""}</p>!
      </div>
    ),

    type: "success",
  };
};

const loginFail = {
  message: (
    <div className="text-red-500">
      <div>ƒêƒÉng nh·∫≠p th·∫•t b·∫°i!</div>
      <div>
        Sai <p className="font-semibold inline">t√†i kho·∫£n</p> ho·∫∑c{" "}
        <p className="font-semibold inline">m·∫≠t kh·∫©u</p>!
      </div>
    </div>
  ),
  type: "error",
};

const registerSuccess = (name: any) => {
  return {
    message: (
      <div className="text-slate-500">
        <div>ƒêƒÉng k√Ω th√†nh c√¥ng!</div>
        <div>
          Xin ch√†o <p className="font-semibold inline">{name ? name : ""}</p>!
        </div>
      </div>
    ),
    type: "success",
  };
};

const registerFail = (message: any) => {
  return {
    message: (
      <div className="text-red-500">
        <div>ƒêƒÉng k√Ω th·∫•t b·∫°i!</div>
        <div className="font-semibold">{message}</div>
        {/* <div>
          Sai <p className="font-semibold inline">t√†i kho·∫£n</p> ho·∫∑c{" "}
          <p className="font-semibold inline">m·∫≠t kh·∫©u</p>!
        </div> */}
      </div>
    ),
    type: "error",
  };
};

const logoutToast = {
  message: <div className="text-orange-600">üëã H·∫πn g·∫∑p l·∫°i!</div>,
  type: "default",
};

const getDataSuccess = {
  message: "L·∫•y d·ªØ li·ªáu th√†nh c√¥ng!",
  type: "success",
};

const getDataFail = {
  message: (
    <div className="text-red-500">
      <div>L·∫•y d·ªØ li·ªáu th·∫•t b·∫°i!</div>
    </div>
  ),
  type: "error",
};

const addSuccess = {
  message: "Th√™m th√†nh c√¥ng!",
  type: "success",
};

const addFail = (message: any) => {
  return {
    message: (
      <div className="text-red-500">
        <div>Th√™m th·∫•t b·∫°i!</div>
        <div className="font-semibold">{message}</div>
      </div>
    ),
    type: "error",
  };
};

const updateSuccess = {
  message: "C·∫≠p nh·∫≠t th√†nh c√¥ng!",
  type: "success",
};

const updateFail = (message: any) => {
  return {
    message: (
      <div className="text-red-500">
        <div>C·∫≠p nh·∫≠t th·∫•t b·∫°i!</div>
        <div className="font-semibold">{message}</div>
      </div>
    ),
    type: "error",
  };
};

const deleteSuccess = {
  message: "X√≥a th√†nh c√¥ng!",
  type: "success",
};

const deleteFail = (message: any) => {
  return {
    message: (
      <div className="text-red-500">
        <div>X√≥a th·∫•t b·∫°i!</div>
        <div className="font-semibold">{message}</div>
      </div>
    ),
    type: "error",
  };
};

export {
  loadingToast,
  updateToast,
  loginSuccess,
  loginFail,
  registerSuccess,
  registerFail,
  logoutToast,
  addSuccess,
  addFail,
  getDataSuccess,
  getDataFail,
  updateSuccess,
  updateFail,
  deleteSuccess,
  deleteFail,
  updateToastNoStop,
};
